version: '3.4'
services:
  # -- app -- #
  app:
    image: python-app
    build:
      context: .
      target: dynamo-based
    depends_on:
      - mysql
      - dynamodb
    environment:
      PORT: 5000
      HOSTNAME: '0.0.0.0'
      MYSQL_USER: user
      MYSQL_PASSWORD: user_pwd
      MYSQL_DATABASE: default
      MYSQL_ENDPOINT: mysql
      MYSQL_PORT: 3306
      AWS_REGION: local
      AWS_ACCESS_KEY_ID: none
      AWS_SECRET_ACCESS_KEY: none
      AWS_DYNAMODB_ENDPOINT: http://dynamodb:8000
    expose:
      - 5000
    networks:
      - py-dbs

  # -- databases -- #
  mysql:
    image: mysql:5.6
    expose:
      - 3306
    networks:
      - py-dbs
    environment:
      MYSQL_ROOT_PASSWORD: root_pwd
      MYSQL_USER: user
      MYSQL_PASSWORD: user_pwd
      MYSQL_DATABASE: default
    volumes:
      - mysql-vol:/var/lib/mysql

  dynamodb:
    image: cnadiminti/dynamodb-local:latest
    networks:
      - py-dbs
    expose:
      - 8000
    volumes:
      - dynamo-vol:/dynamodb_local_db
    environment:
      JAVA_OPTS: '-Xmx256m'

# let docker manage the volumes
volumes:
  mysql-vol:
  dynamo-vol:

# name the network
networks:
  py-dbs:
    driver: bridge
